name: Prepare Skills for Claude Console

on:
  push:
    branches:
      - main
    paths:
      - 'skills/grammar/**'
      - 'skills/sermon-writer/**'
      - '.github/workflows/prepare-skills.yml'
  
  workflow_dispatch:
    inputs:
      skill:
        description: 'Skill to prepare (grammar, sermon-writer, or all)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - grammar
          - sermon-writer

jobs:
  detect-changes:
    name: Detect Changed Skills
    runs-on: ubuntu-latest
    outputs:
      grammar_changed: ${{ steps.changes.outputs.grammar }}
      sermon_writer_changed: ${{ steps.changes.outputs.sermon_writer }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Generate version
        id: version
        run: |
          VERSION=$(git describe --tags --always --dirty)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "📦 Version: $VERSION"
      
      - name: Detect changed skills
        id: changes
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Manual trigger - prepare specified skill(s)
            if [ "${{ github.event.inputs.skill }}" == "all" ] || [ "${{ github.event.inputs.skill }}" == "grammar" ]; then
              echo "grammar=true" >> $GITHUB_OUTPUT
            fi
            if [ "${{ github.event.inputs.skill }}" == "all" ] || [ "${{ github.event.inputs.skill }}" == "sermon-writer" ]; then
              echo "sermon_writer=true" >> $GITHUB_OUTPUT
            fi
          else
            # Auto trigger - detect changed files
            if git diff --name-only HEAD~1 HEAD | grep -q '^skills/grammar/'; then
              echo "grammar=true" >> $GITHUB_OUTPUT
            fi
            if git diff --name-only HEAD~1 HEAD | grep -q '^skills/sermon-writer/'; then
              echo "sermon_writer=true" >> $GITHUB_OUTPUT
            fi
          fi

  prepare-grammar:
    name: Prepare Grammar Skill
    needs: detect-changes
    if: needs.detect-changes.outputs.grammar_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install anthropic python-dotenv
      
      - name: Prepare Grammar Skill Package
        run: |
          VERSION="${{ needs.detect-changes.outputs.version }}"
          python scripts/prepare-skill.py \
            --skill-path skills/grammar \
            --skill-id ${{ vars.GRAMMAR_SKILL_ID || 'skill_01LEoRLHpcopdFfXjv9gj9hj' }} \
            --version $VERSION \
            --output-dir deployments
      
      - name: Upload Grammar Deployment Package
        uses: actions/upload-artifact@v4
        with:
          name: grammar-skill-${{ needs.detect-changes.outputs.version }}
          path: deployments/grammar-*.zip
          retention-days: 30
      
      - name: Add deployment info to summary
        run: |
          VERSION="${{ needs.detect-changes.outputs.version }}"
          echo "## 📦 Grammar Skill Ready for Upload" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** $VERSION" >> $GITHUB_STEP_SUMMARY
          echo "**Skill ID:** ${{ vars.GRAMMAR_SKILL_ID || 'skill_01LEoRLHpcopdFfXjv9gj9hj' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Files:** grammar-$VERSION.zip" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Manual Upload Instructions:" >> $GITHUB_STEP_SUMMARY
          echo "1. Download the artifact: \`grammar-skill-$VERSION\`" >> $GITHUB_STEP_SUMMARY
          echo "2. Go to https://console.anthropic.com/skills" >> $GITHUB_STEP_SUMMARY
          echo "3. Find the 'grammar' skill" >> $GITHUB_STEP_SUMMARY
          echo "4. Upload the new version using the downloaded zip file" >> $GITHUB_STEP_SUMMARY

  prepare-sermon-writer:
    name: Prepare Sermon Writer Skill
    needs: detect-changes
    if: needs.detect-changes.outputs.sermon_writer_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install anthropic python-dotenv
      
      - name: Prepare Sermon Writer Skill Package
        run: |
          VERSION="${{ needs.detect-changes.outputs.version }}"
          python scripts/prepare-skill.py \
            --skill-path skills/sermon-writer \
            --skill-id ${{ vars.SERMON_WRITER_SKILL_ID || 'skill_017hvH95CWyhykzXbG542B3B' }} \
            --version $VERSION \
            --output-dir deployments
      
      - name: Upload Sermon Writer Deployment Package
        uses: actions/upload-artifact@v4
        with:
          name: sermon-writer-skill-${{ needs.detect-changes.outputs.version }}
          path: deployments/sermon-writer-*.zip
          retention-days: 30
      
      - name: Add deployment info to summary
        run: |
          VERSION="${{ needs.detect-changes.outputs.version }}"
          echo "## 📦 Sermon Writer Skill Ready for Upload" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** $VERSION" >> $GITHUB_STEP_SUMMARY
          echo "**Skill ID:** ${{ vars.SERMON_WRITER_SKILL_ID || 'skill_017hvH95CWyhykzXbG542B3B' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Files:** sermon-writer-$VERSION.zip" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Manual Upload Instructions:" >> $GITHUB_STEP_SUMMARY
          echo "1. Download the artifact: \`sermon-writer-skill-$VERSION\`" >> $GITHUB_STEP_SUMMARY
          echo "2. Go to https://console.anthropic.com/skills" >> $GITHUB_STEP_SUMMARY
          echo "3. Find the 'sermon-writer' skill" >> $GITHUB_STEP_SUMMARY
          echo "4. Upload the new version using the downloaded zip file" >> $GITHUB_STEP_SUMMARY

  notify-completion:
    name: Deployment Summary
    needs: [detect-changes, prepare-grammar, prepare-sermon-writer]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Create final summary
        run: |
          echo "# 🎯 Claude Skills Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ needs.detect-changes.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.detect-changes.outputs.grammar_changed }}" == "true" ]; then
            if [ "${{ needs.prepare-grammar.result }}" == "success" ]; then
              echo "✅ **Grammar skill** deployment package created" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Grammar skill** deployment failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️  **Grammar skill** - no changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.detect-changes.outputs.sermon_writer_changed }}" == "true" ]; then
            if [ "${{ needs.prepare-sermon-writer.result }}" == "success" ]; then
              echo "✅ **Sermon Writer skill** deployment package created" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Sermon Writer skill** deployment failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️  **Sermon Writer skill** - no changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔄 When Skills API is Available:" >> $GITHUB_STEP_SUMMARY
          echo "Replace the prepare-skill.py script calls with upload-skill.py for full automation!" >> $GITHUB_STEP_SUMMARY